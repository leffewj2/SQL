--In this project, I used a premade database in SQLiteStudio to analyze data in a way that would be useful for the business.

--#1.Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT FirstName, LastName, Country 
FROM chinook.customers
WHERE Country <> 'USA';

--#2. Show only the Customers from Brazil.
SELECT FirstName, LastName, Country 
FROM chinook.customers
WHERE Country = 'Brazil';

--#3. Find the Invoices of customers who are from Brazil. 
--The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceDate, customers.Country
FROM chinook.customers customers
JOIN chinook.invoices invoices
ON customers.Customerid = invoices.CustomerId
WHERE customers.Country = 'Brazil'
GROUP BY customers.firstname;

--#4. Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title
FROM chinook.employees
WHERE Title LIKE '%Sales%Agent%';

--#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry
FROM chinook.invoices;

--#6. Provide a query that shows the invoices associated with each sales agent. 
--The resulting table should include the Sales Agent's full name.
SELECT employees.LastName, employees.Firstname, invoices.InvoiceId
FROM chinook.Employees employees
JOIN chinook.Customers customers ON customers.SupportRepId = employees.EmployeeId
JOIN chinook.Invoices invoices ON invoices.CustomerId = customers.CustomerId;

--#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total, customers.FirstName, customers.LastName, customers.Country,
employees.FirstName, employees.LastName
FROM chinook.invoices invoices
JOIN chinook.customers customers ON customers.CustomerId=invoices.InvoiceId
JOIN chinook.employees employees ON customers.SupportRepId=employees.EmployeeId;

--#8. How many Invoices were there in 2009?
SELECT COUNT(invoices.InvoiceId)
FROM chinook.invoices invoices
WHERE invoices.InvoiceDate LIKE '2009%';

--#9.What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.invoices invoices
WHERE invoices.InvoiceDate LIKE '2009%';

--#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT invoice_items.InvoiceLineId, tracks.Name
FROM chinook.invoice_items invoice_items
JOIN chinook.tracks tracks
    ON invoice_items.TrackId=tracks.TrackId
GROUP BY InvoiceLineId;

--#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT invoice_items.InvoiceLineId, artists.Name as Artist, tracks.Name
FROM chinook.invoice_items invoice_items
LEFT JOIN chinook.tracks tracks
    ON invoice_items.TrackId=tracks.TrackId
INNER JOIN chinook.albums albums
    ON albums.AlbumId=tracks.AlbumId
LEFT JOIN chinook.artists artists
    ON artists.ArtistId=albums.ArtistId;
 
--#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name as Track, albums.Title as Album, 
media_type.Name as Media_Type, genres.Name as Genre
FROM chinook.tracks tracks
JOIN chinook.albums albums
    ON tracks.AlbumId=albums.AlbumId
JOIN chinook.media_types media_type
    ON media_type.MediaTypeId=tracks.MediaTypeId
JOIN chinook.genres genres
    ON tracks.GenreId=genres.GenreId
GROUP BY track

--#13. Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName,
ROUND(SUM(Invoices.Total), 2) as 'Total Sales' 
FROM chinook.Employees employees
JOIN chinook.Customers customers
    ON customers.SupportRepId = employees.EmployeeId
JOIN chinook.Invoices Invoices
    ON Invoices.CustomerId = customers.CustomerId
WHERE employees.Title = 'Sales Support Agent' 
GROUP BY employees.FirstName;

--#14. Which sales agent made the most dollars in sales in 2009?













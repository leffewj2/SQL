--In this project, I pulled a database with various information about the top 50 Spotify Songs in 2021 from Kaggle
--I used SQLiteStudio to answer various questions about the data

--First, I used this SQL Query to create a table in SQLiteStudio. After making the table, I used a .csv file to import the Kaggle data into the table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

--#1. Find all tracks with above average popularity. Display artist name, track name, and popularity.
--Using a nested query to find the average popularity of all 50 songs in the database:
SELECT artist_name, track_name, popularity FROM BIT_DB.Spotifydata
WHERE popularity>=(SELECT avg(popularity) FROM BIT_DB.Spotifydata);

--#2. What is the average danceability of the top 10 songs?
SELECT avg(danceability) FROM BIT_DB.Spotifydata
WHERE id>=10;

--In this case, I used a CTE (common table expression) to find the names and average popularity of artists with a popularity of at least 90, and assigning them the value 'Top Star' in a new 'Tag' column
WITH popularity_avg_CTE AS (
SELECT s.artist_name, AVG(popularity) AS average_popularity
FROM SpotifyData s
GROUP BY s.artist_name
)
SELECT artist_name, average_popularity, 'Top Star' AS tag
FROM popularity_avg_CTE
WHERE average_popularity>=90;
